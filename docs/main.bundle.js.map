{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat-message/chat-message.component.ts","webpack:///./src/app/chat-nav-bar/chat-nav-bar.component.ts","webpack:///./src/app/chat-page/chat-page.component.ts","webpack:///./src/app/chat-thread/chat-thread.component.ts","webpack:///./src/app/chat-threads/chat-threads.component.ts","webpack:///./src/app/chat-window/chat-window.component.ts","webpack:///./src/app/data/chat-example-data.ts","webpack:///./src/app/pipes/from-now.pipe.ts","webpack:///./src/app/user/user.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/thread/threads.service.ts","webpack:///./src/app/message/messages.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/chat-message/chat-message.component.css","webpack:///./src/app/chat-nav-bar/chat-nav-bar.component.css","webpack:///./src/app/chat-page/chat-page.component.css","webpack:///./src/app/chat-thread/chat-thread.component.css","webpack:///./src/app/chat-threads/chat-threads.component.css","webpack:///./src/app/chat-window/chat-window.component.css","webpack:///./~/moment/locale ^\\.\\/.*$","webpack:///./src/app/app.component.html","webpack:///./src/app/chat-message/chat-message.component.html","webpack:///./src/app/chat-nav-bar/chat-nav-bar.component.html","webpack:///./src/app/chat-page/chat-page.component.html","webpack:///./src/app/chat-thread/chat-thread.component.html","webpack:///./src/app/chat-threads/chat-threads.component.html","webpack:///./src/app/chat-window/chat-window.component.html","webpack:///./src/app/user/users.service.ts","webpack:///./src/app/message/message.model.ts","webpack:///./src/app/thread/thread.model.ts","webpack:///./src/app/util/uuid.ts"],"names":[],"mappings":"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CAAC,CAAC;IACP,CAAC;IACH,sBAAC;AAAD,CAAC;AAzFY,eAAe;IAD3B,wFAAU,EAAE;;GACA,eAAe,CAyF3B;AAzF2B;AA2FrB,IAAM,0BAA0B,GAAe;IACpD,eAAe;CAChB,CAAC;;;;;;;;AC1GF;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtPA,6D;;;;;;;ACAA,kEAAkE,iDAAiD,8EAA8E,0BAA0B,6DAA6D,+CAA+C,cAAc,cAAc,8BAA8B,gBAAgB,KAAK,0BAA0B,wFAAwF,0BAA0B,wB;;;;;;;ACAliB,0RAA0R,uBAAuB,uD;;;;;;;ACAjT,8K;;;;;;;ACAA,4IAA4I,kBAAkB,4FAA4F,aAAa,uCAAuC,2DAA2D,yBAAyB,6F;;;;;;;ACAlY,mP;;;;;;;ACAA,4YAA4Y,oBAAoB,25B;;;;;;;;;;;;;;;;;;;ACArX;AACK;AAIhD;;GAEG;AAEH,IAAa,YAAY;IADzB;QAEE,0CAA0C;QAC1C,gBAAW,GAAkB,IAAI,qDAAe,CAAO,IAAI,CAAC,CAAC;IAK/D,CAAC;IAHQ,qCAAc,GAArB,UAAsB,OAAa;QACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;IACH,mBAAC;AAAD,CAAC;AAPY,YAAY;IADxB,wFAAU,EAAE;GACA,YAAY,CAOxB;AAPwB;AASlB,IAAM,sBAAsB,GAAe;IAChD,YAAY;CACb,CAAC;;;;;;;;;;;AClBoC;AAEtC;;GAEG;AACF;IAQE,iBAAY,GAAS;QACnB,IAAI,CAAC,EAAE,GAAgB,GAAG,IAAI,GAAG,CAAC,EAAE,IAAiB,+EAAI,EAAE,CAAC;QAC5D,IAAI,CAAC,MAAM,GAAY,GAAG,IAAI,GAAG,CAAC,MAAM,IAAa,KAAK,CAAC;QAC3D,IAAI,CAAC,MAAM,GAAY,GAAG,IAAI,GAAG,CAAC,MAAM,IAAa,IAAI,IAAI,EAAE,CAAC;QAChE,IAAI,CAAC,MAAM,GAAY,GAAG,IAAI,GAAG,CAAC,MAAM,IAAa,IAAI,CAAC;QAC1D,IAAI,CAAC,IAAI,GAAc,GAAG,IAAI,GAAG,CAAC,IAAI,IAAe,IAAI,CAAC;QAC1D,IAAI,CAAC,MAAM,GAAY,GAAG,IAAI,GAAG,CAAC,MAAM,IAAa,IAAI,CAAC;IAC5D,CAAC;IACH,cAAC;AAAD,CAAC;;;;;;;;;;;;ACtBkC;AAEpC;;GAEG;AACF;IAME,gBAAY,EAAW,EACX,IAAa,EACb,SAAkB;QAC5B,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,+EAAI,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IACH,aAAC;AAAD,CAAC;;;;;;;;;;ACnBF;AAAA,qCAAqC;AACrC,sDAAsD;AAEtD,qBAAqB;AACrB,qCAJqC,CAI/B;IACF,IAAI,CAAC,EAAE,MAAM,CAAC;IACd,IAAI,MAAM,GAAG,EAAE,CAAC;IAEhB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;QACtB,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAChC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC9C,MAAM,IAAI,GAAG,CAAC;QAClB,CAAC;QACD,MAAM,IAAI,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;aAC5D,QAAQ,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,MAAM,CAAC;AAClB,CAAC;AAAA,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 251;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 251\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, Inject } from '@angular/core';\nimport { ChatExampleData } from './data/chat-example-data';\n\nimport { UsersService } from './user/users.service';\nimport { ThreadsService } from './thread/threads.service';\nimport { MessagesService } from './message/messages.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    constructor(public messagesService: MessagesService,\n              public threadsService: ThreadsService,\n              public usersService: UsersService) {\n    ChatExampleData.init(messagesService, threadsService, usersService);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { UsersService } from './user/users.service';\nimport { ThreadsService } from './thread/threads.service';\nimport { MessagesService } from './message/messages.service';\n\nimport { AppComponent } from './app.component';\nimport { ChatMessageComponent } from './chat-message/chat-message.component';\nimport { ChatThreadComponent } from './chat-thread/chat-thread.component';\nimport { ChatNavBarComponent } from './chat-nav-bar/chat-nav-bar.component';\nimport { ChatThreadsComponent } from './chat-threads/chat-threads.component';\nimport { ChatWindowComponent } from './chat-window/chat-window.component';\nimport { ChatPageComponent } from './chat-page/chat-page.component';\nimport { FromNowPipe } from './pipes/from-now.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatMessageComponent,\n    ChatThreadComponent,\n    ChatNavBarComponent,\n    ChatThreadsComponent,\n    ChatWindowComponent,\n    ChatPageComponent,\n    FromNowPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [\n    MessagesService, ThreadsService, UsersService\n  ],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {\n  Component,\n  OnInit,\n  Input\n} from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { UsersService } from './../user/users.service';\nimport { ThreadsService } from './../thread/threads.service';\nimport { MessagesService } from './../message/messages.service';\n\nimport { Message } from './../message/message.model';\nimport { Thread } from './../thread/thread.model';\nimport { User } from './../user/user.model';\n\n@Component({\n  selector: 'chat-message',\n  templateUrl: './chat-message.component.html',\n  styleUrls: ['./chat-message.component.css']\n})\nexport class ChatMessageComponent implements OnInit {\n  @Input() message: Message;\n  currentUser: User;\n  incoming: boolean;\n\n  constructor(public UsersService: UsersService) {\n  }\n\n  ngOnInit(): void {\n    this.UsersService.currentUser\n      .subscribe(\n        (user: User) => {\n          this.currentUser = user;\n          if (this.message.author && user) {\n            this.incoming = this.message.author.id !== user.id;\n          }\n        });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat-message/chat-message.component.ts","import {\n  Component,\n  Inject,\n  OnInit\n} from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { ThreadsService } from './../thread/threads.service';\nimport { MessagesService } from './../message/messages.service';\n\nimport { Thread } from './../thread/thread.model';\nimport { Message } from './../message/message.model';\n\n@Component({\n  selector: 'chat-nav-bar',\n  templateUrl: './chat-nav-bar.component.html',\n  styleUrls: ['./chat-nav-bar.component.css']\n})\nexport class ChatNavBarComponent implements OnInit {\n  unreadMessagesCount: number;\n\n  constructor(public messagesService: MessagesService,\n              public threadsService: ThreadsService) {\n  }\n\n  ngOnInit(): void {\n    this.messagesService.messages\n      .combineLatest(\n        this.threadsService.currentThread,\n        (messages: Message[], currentThread: Thread) =>\n          [currentThread, messages] )\n\n      .subscribe(([currentThread, messages]: [Thread, Message[]]) => {\n        this.unreadMessagesCount =\n          _.reduce(\n            messages,\n            (sum: number, m: Message) => {\n              const messageIsInCurrentThread: boolean = m.thread &&\n                currentThread &&\n                (currentThread.id === m.thread.id);\n              // note: in a \"real\" app you should also exclude\n              // messages that were authored by the current user b/c they've\n              // already been \"read\"\n              if (m && !m.isRead && !messageIsInCurrentThread) {\n                sum = sum + 1;\n              }\n              return sum;\n            },\n            0);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat-nav-bar/chat-nav-bar.component.ts","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'chat-page',\n  templateUrl: './chat-page.component.html',\n  styleUrls: ['./chat-page.component.css']\n})\nexport class ChatPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat-page/chat-page.component.ts","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ThreadsService } from './../thread/threads.service';\nimport { Thread } from '../thread/thread.model';\n\n@Component({\n  selector: 'chat-thread',\n  templateUrl: './chat-thread.component.html',\n  styleUrls: ['./chat-thread.component.css']\n})\nexport class ChatThreadComponent implements OnInit {\n  @Input() thread: Thread;\n  selected = false;\n\n  constructor(public threadsService: ThreadsService) {\n  }\n\n  ngOnInit(): void {\n    this.threadsService.currentThread\n      .subscribe( (currentThread: Thread) => {\n        this.selected = currentThread &&\n          this.thread &&\n          (currentThread.id === this.thread.id);\n      });\n  }\n\n  clicked(event: any): void {\n    this.threadsService.setCurrentThread(this.thread);\n    event.preventDefault();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat-thread/chat-thread.component.ts","import {\n  Component,\n  OnInit,\n  Inject\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Thread } from '../thread/thread.model';\nimport { ThreadsService } from './../thread/threads.service';\n\n@Component({\n  selector: 'chat-threads',\n  templateUrl: './chat-threads.component.html',\n  styleUrls: ['./chat-threads.component.css']\n})\nexport class ChatThreadsComponent {\n  threads: Observable<any>;\n\n  constructor(public threadsService: ThreadsService) {\n    this.threads = threadsService.orderedThreads;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat-threads/chat-threads.component.ts","import {\n  Component,\n  Inject,\n  ElementRef,\n  OnInit,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { User } from '../user/user.model';\nimport { UsersService } from '../user/users.service';\nimport { Thread } from '../thread/thread.model';\nimport { ThreadsService } from '../thread/threads.service';\nimport { Message } from '../message/message.model';\nimport { MessagesService } from '../message/messages.service';\n\n@Component({\n  selector: 'chat-window',\n  templateUrl: './chat-window.component.html',\n  styleUrls: ['./chat-window.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChatWindowComponent implements OnInit {\n  messages: Observable<any>;\n  currentThread: Thread;\n  draftMessage: Message;\n  currentUser: User;\n\n  constructor(public messagesService: MessagesService,\n              public threadsService: ThreadsService,\n              public UsersService: UsersService,\n              public el: ElementRef) {\n  }\n\n  ngOnInit(): void {\n    this.messages = this.threadsService.currentThreadMessages;\n\n    this.draftMessage = new Message();\n\n    this.threadsService.currentThread.subscribe(\n      (thread: Thread) => {\n        this.currentThread = thread;\n      });\n\n    this.UsersService.currentUser\n      .subscribe(\n        (user: User) => {\n          this.currentUser = user;\n        });\n\n    this.messages\n      .subscribe(\n        (messages: Array<Message>) => {\n          setTimeout(() => {\n            this.scrollToBottom();\n          });\n        });\n  }\n\n  onEnter(event: any): void {\n    this.sendMessage();\n    event.preventDefault();\n  }\n\n  sendMessage(): void {\n    const m: Message = this.draftMessage;\n    m.author = this.currentUser;\n    m.thread = this.currentThread;\n    m.isRead = true;\n    this.messagesService.addMessage(m);\n    this.draftMessage = new Message();\n  }\n\n  scrollToBottom(): void {\n    const scrollPane: any = this.el\n      .nativeElement.querySelector('.msg-container-base');\n    scrollPane.scrollTop = scrollPane.scrollHeight;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat-window/chat-window.component.ts","/* tslint:disable:max-line-length */\nimport { User } from '../user/user.model';\nimport { Thread } from '../thread/thread.model';\nimport { Message } from '../message/message.model';\nimport { MessagesService } from '../message/messages.service';\nimport { ThreadsService } from '../thread/threads.service';\nimport { UsersService } from '../user/users.service';\nimport * as moment from 'moment';\n\n// the person using the app us Juliet\nconst me: User      = new User('Juliet', 'assets/images/avatars/female-avatar-1.png');\nconst ladycap: User = new User('Lady Capulet', 'assets/images/avatars/female-avatar-2.png');\nconst echo: User    = new User('Echo Bot', 'assets/images/avatars/male-avatar-1.png');\nconst rev: User     = new User('Reverse Bot', 'assets/images/avatars/female-avatar-4.png');\nconst wait: User    = new User('Waiting Bot', 'assets/images/avatars/male-avatar-2.png');\n\nconst tLadycap: Thread = new Thread('tLadycap', ladycap.name, ladycap.avatarSrc);\nconst tEcho: Thread    = new Thread('tEcho', echo.name, echo.avatarSrc);\nconst tRev: Thread     = new Thread('tRev', rev.name, rev.avatarSrc);\nconst tWait: Thread    = new Thread('tWait', wait.name, wait.avatarSrc);\n\nconst initialMessages: Array<Message> = [\n  new Message({\n    author: me,\n    sentAt: moment().subtract(45, 'minutes').toDate(),\n    text: 'Yet let me weep for such a feeling loss.',\n    thread: tLadycap\n  }),\n  new Message({\n    author: ladycap,\n    sentAt: moment().subtract(20, 'minutes').toDate(),\n    text: 'So shall you feel the loss, but not the friend which you weep for.',\n    thread: tLadycap\n  }),\n  new Message({\n    author: echo,\n    sentAt: moment().subtract(1, 'minutes').toDate(),\n    text: `I\\'ll echo whatever you send me`,\n    thread: tEcho\n  }),\n  new Message({\n    author: rev,\n    sentAt: moment().subtract(3, 'minutes').toDate(),\n    text: `I\\'ll reverse whatever you send me`,\n    thread: tRev\n  }),\n  new Message({\n    author: wait,\n    sentAt: moment().subtract(4, 'minutes').toDate(),\n    text: `I\\'ll wait however many seconds you send to me before responding. Try sending '3'`,\n    thread: tWait\n  }),\n];\n\nexport class ChatExampleData {\n  static init(messagesService: MessagesService,\n              threadsService: ThreadsService,\n              UsersService: UsersService): void {\n\n    // TODO make `messages` hot\n    messagesService.messages.subscribe(() => ({}));\n\n    // set \"Juliet\" as the current user\n    UsersService.setCurrentUser(me);\n\n    // create the initial messages\n    initialMessages.map( (message: Message) => messagesService.addMessage(message) );\n\n    threadsService.setCurrentThread(tEcho);\n\n    this.setupBots(messagesService);\n  }\n\n  static setupBots(messagesService: MessagesService): void {\n\n    // echo bot\n    messagesService.messagesForThreadUser(tEcho, echo)\n      .forEach( (message: Message): void => {\n        messagesService.addMessage(\n          new Message({\n            author: echo,\n            text: message.text,\n            thread: tEcho\n          })\n        );\n      },\n                null);\n\n\n    // reverse bot\n    messagesService.messagesForThreadUser(tRev, rev)\n      .forEach( (message: Message): void => {\n        messagesService.addMessage(\n          new Message({\n            author: rev,\n            text: message.text.split('').reverse().join(''),\n            thread: tRev\n          })\n        );\n      },\n                null);\n\n    // waiting bot\n    messagesService.messagesForThreadUser(tWait, wait)\n      .forEach( (message: Message): void => {\n\n        let waitTime: number = parseInt(message.text, 10);\n        let reply: string;\n\n        if (isNaN(waitTime)) {\n          waitTime = 0;\n          reply = `I didn\\'t understand ${message.text}. Try sending me a number`;\n        } else {\n          reply = `I waited ${waitTime} seconds to send you this.`;\n        }\n\n        setTimeout(\n          () => {\n            messagesService.addMessage(\n              new Message({\n                author: wait,\n                text: reply,\n                thread: tWait\n              })\n            );\n          },\n          waitTime * 1000);\n      },\n                null);\n\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data/chat-example-data.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n/**\n * FromNowPipe let's us convert a date into a human-readable relative-time\n * such as \"10 minutes ago\".\n */\n@Pipe({\n  name: 'fromNow'\n})\nexport class FromNowPipe implements PipeTransform {\n  transform(value: any, args: Array<any>): string {\n    return moment(value).fromNow();\n  }\n}\n\nexport const fromNowPipeInjectables: Array<any> = [\n  FromNowPipe\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/from-now.pipe.ts","import { uuid } from '../util/uuid';\n\n/**\n * A User represents an agent that sends messages\n */\nexport class User {\n  id: string;\n\n  constructor(public name: string,\n              public avatarSrc: string) {\n    this.id = uuid();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user.model.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { Injectable } from '@angular/core';\nimport { Subject, BehaviorSubject, Observable } from 'rxjs';\nimport { Thread } from './thread.model';\nimport { Message } from '../message/message.model';\nimport { MessagesService } from '../message/messages.service';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class ThreadsService {\n\n  // `threads` is a observable that contains the most up to date list of threads\n  threads: Observable<{ [key: string]: Thread }>;\n\n  // `orderedThreads` contains a newest-first chronological list of threads\n  orderedThreads: Observable<Thread[]>;\n\n  // `currentThread` contains the currently selected thread\n  currentThread: Subject<Thread> =\n    new BehaviorSubject<Thread>(new Thread());\n\n  // `currentThreadMessages` contains the set of messages for the currently\n  // selected thread\n  currentThreadMessages: Observable<Message[]>;\n\n  constructor(public messagesService: MessagesService) {\n\n    this.threads = messagesService.messages\n      .map( (messages: Message[]) => {\n        const threads: {[key: string]: Thread} = {};\n        // Store the message's thread in our accumulator `threads`\n        messages.map((message: Message) => {\n          threads[message.thread.id] = threads[message.thread.id] ||\n            message.thread;\n\n          // Cache the most recent message for each thread\n          const messagesThread: Thread = threads[message.thread.id];\n          if (!messagesThread.lastMessage ||\n              messagesThread.lastMessage.sentAt < message.sentAt) {\n            messagesThread.lastMessage = message;\n          }\n        });\n        return threads;\n      });\n\n    this.orderedThreads = this.threads\n      .map((threadGroups: { [key: string]: Thread }) => {\n        const threads: Thread[] = _.values(threadGroups);\n        return _.sortBy(threads, (t: Thread) => t.lastMessage.sentAt).reverse();\n      });\n\n    this.currentThreadMessages = this.currentThread\n      .combineLatest(messagesService.messages,\n                     (currentThread: Thread, messages: Message[]) => {\n        if (currentThread && messages.length > 0) {\n          return _.chain(messages)\n            .filter((message: Message) =>\n                    (message.thread.id === currentThread.id))\n            .map((message: Message) => {\n              message.isRead = true;\n              return message; })\n            .value();\n        } else {\n          return [];\n        }\n      });\n\n    this.currentThread.subscribe(this.messagesService.markThreadAsRead);\n  }\n\n  setCurrentThread(newThread: Thread): void {\n    this.currentThread.next(newThread);\n  }\n\n}\n\nexport const threadsServiceInjectables: Array<any> = [\n  ThreadsService\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/thread/threads.service.ts","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { User } from '../user/user.model';\nimport { Thread } from '../thread/thread.model';\nimport { Message } from '../message/message.model';\n\nconst initialMessages: Message[] = [];\n\ninterface IMessagesOperation extends Function {\n  (messages: Message[]): Message[];\n}\n\n@Injectable()\nexport class MessagesService {\n  // a stream that publishes new messages only once\n  newMessages: Subject<Message> = new Subject<Message>();\n\n  // `messages` is a stream that emits an array of the most up to date messages\n  messages: Observable<Message[]>;\n\n  // `updates` receives _operations_ to be applied to our `messages`\n  // it's a way we can perform changes on *all* messages (that are currently\n  // stored in `messages`)\n  updates: Subject<any> = new Subject<any>();\n\n  // action streams\n  create: Subject<Message> = new Subject<Message>();\n  markThreadAsRead: Subject<any> = new Subject<any>();\n\n  constructor() {\n    this.messages = this.updates\n      // watch the updates and accumulate operations on the messages\n      .scan((messages: Message[],\n             operation: IMessagesOperation) => {\n               return operation(messages);\n             },\n            initialMessages)\n      // make sure we can share the most recent list of messages across anyone\n      // who's interested in subscribing and cache the last known list of\n      // messages\n      .publishReplay(1)\n      .refCount();\n\n    // `create` takes a Message and then puts an operation (the inner function)\n    // on the `updates` stream to add the Message to the list of messages.\n    //\n    // That is, for each item that gets added to `create` (by using `next`)\n    // this stream emits a concat operation function.\n    //\n    // Next we subscribe `this.updates` to listen to this stream, which means\n    // that it will receive each operation that is created\n    //\n    // Note that it would be perfectly acceptable to simply modify the\n    // \"addMessage\" function below to simply add the inner operation function to\n    // the update stream directly and get rid of this extra action stream\n    // entirely. The pros are that it is potentially clearer. The cons are that\n    // the stream is no longer composable.\n    this.create\n      .map( function(message: Message): IMessagesOperation {\n        return (messages: Message[]) => {\n          return messages.concat(message);\n        };\n      })\n      .subscribe(this.updates);\n\n    this.newMessages\n      .subscribe(this.create);\n\n    // similarly, `markThreadAsRead` takes a Thread and then puts an operation\n    // on the `updates` stream to mark the Messages as read\n    this.markThreadAsRead\n      .map( (thread: Thread) => {\n        return (messages: Message[]) => {\n          return messages.map( (message: Message) => {\n            // note that we're manipulating `message` directly here. Mutability\n            // can be confusing and there are lots of reasons why you might want\n            // to, say, copy the Message object or some other 'immutable' here\n            if (message.thread.id === thread.id) {\n              message.isRead = true;\n            }\n            return message;\n          });\n        };\n      })\n      .subscribe(this.updates);\n\n  }\n\n  // an imperative function call to this action stream\n  addMessage(message: Message): void {\n    this.newMessages.next(message);\n  }\n\n  messagesForThreadUser(thread: Thread, user: User): Observable<Message> {\n    return this.newMessages\n      .filter((message: Message) => {\n               // belongs to this thread\n        return (message.thread.id === thread.id) &&\n               // and isn't authored by this user\n               (message.author.id !== user.id);\n      });\n  }\n}\n\nexport const messagesServiceInjectables: Array<any> = [\n  MessagesService\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/message/messages.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 324\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-message/chat-message.component.css\n// module id = 325\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-nav-bar/chat-nav-bar.component.css\n// module id = 326\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-page/chat-page.component.css\n// module id = 327\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-thread/chat-thread.component.css\n// module id = 328\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-threads/chat-threads.component.css\n// module id = 329\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-window/chat-window.component.css\n// module id = 330\n// module chunks = 1","var map = {\n\t\"./af\": 103,\n\t\"./af.js\": 103,\n\t\"./ar\": 110,\n\t\"./ar-dz\": 104,\n\t\"./ar-dz.js\": 104,\n\t\"./ar-kw\": 105,\n\t\"./ar-kw.js\": 105,\n\t\"./ar-ly\": 106,\n\t\"./ar-ly.js\": 106,\n\t\"./ar-ma\": 107,\n\t\"./ar-ma.js\": 107,\n\t\"./ar-sa\": 108,\n\t\"./ar-sa.js\": 108,\n\t\"./ar-tn\": 109,\n\t\"./ar-tn.js\": 109,\n\t\"./ar.js\": 110,\n\t\"./az\": 111,\n\t\"./az.js\": 111,\n\t\"./be\": 112,\n\t\"./be.js\": 112,\n\t\"./bg\": 113,\n\t\"./bg.js\": 113,\n\t\"./bn\": 114,\n\t\"./bn.js\": 114,\n\t\"./bo\": 115,\n\t\"./bo.js\": 115,\n\t\"./br\": 116,\n\t\"./br.js\": 116,\n\t\"./bs\": 117,\n\t\"./bs.js\": 117,\n\t\"./ca\": 118,\n\t\"./ca.js\": 118,\n\t\"./cs\": 119,\n\t\"./cs.js\": 119,\n\t\"./cv\": 120,\n\t\"./cv.js\": 120,\n\t\"./cy\": 121,\n\t\"./cy.js\": 121,\n\t\"./da\": 122,\n\t\"./da.js\": 122,\n\t\"./de\": 125,\n\t\"./de-at\": 123,\n\t\"./de-at.js\": 123,\n\t\"./de-ch\": 124,\n\t\"./de-ch.js\": 124,\n\t\"./de.js\": 125,\n\t\"./dv\": 126,\n\t\"./dv.js\": 126,\n\t\"./el\": 127,\n\t\"./el.js\": 127,\n\t\"./en-au\": 128,\n\t\"./en-au.js\": 128,\n\t\"./en-ca\": 129,\n\t\"./en-ca.js\": 129,\n\t\"./en-gb\": 130,\n\t\"./en-gb.js\": 130,\n\t\"./en-ie\": 131,\n\t\"./en-ie.js\": 131,\n\t\"./en-nz\": 132,\n\t\"./en-nz.js\": 132,\n\t\"./eo\": 133,\n\t\"./eo.js\": 133,\n\t\"./es\": 135,\n\t\"./es-do\": 134,\n\t\"./es-do.js\": 134,\n\t\"./es.js\": 135,\n\t\"./et\": 136,\n\t\"./et.js\": 136,\n\t\"./eu\": 137,\n\t\"./eu.js\": 137,\n\t\"./fa\": 138,\n\t\"./fa.js\": 138,\n\t\"./fi\": 139,\n\t\"./fi.js\": 139,\n\t\"./fo\": 140,\n\t\"./fo.js\": 140,\n\t\"./fr\": 143,\n\t\"./fr-ca\": 141,\n\t\"./fr-ca.js\": 141,\n\t\"./fr-ch\": 142,\n\t\"./fr-ch.js\": 142,\n\t\"./fr.js\": 143,\n\t\"./fy\": 144,\n\t\"./fy.js\": 144,\n\t\"./gd\": 145,\n\t\"./gd.js\": 145,\n\t\"./gl\": 146,\n\t\"./gl.js\": 146,\n\t\"./gom-latn\": 147,\n\t\"./gom-latn.js\": 147,\n\t\"./he\": 148,\n\t\"./he.js\": 148,\n\t\"./hi\": 149,\n\t\"./hi.js\": 149,\n\t\"./hr\": 150,\n\t\"./hr.js\": 150,\n\t\"./hu\": 151,\n\t\"./hu.js\": 151,\n\t\"./hy-am\": 152,\n\t\"./hy-am.js\": 152,\n\t\"./id\": 153,\n\t\"./id.js\": 153,\n\t\"./is\": 154,\n\t\"./is.js\": 154,\n\t\"./it\": 155,\n\t\"./it.js\": 155,\n\t\"./ja\": 156,\n\t\"./ja.js\": 156,\n\t\"./jv\": 157,\n\t\"./jv.js\": 157,\n\t\"./ka\": 158,\n\t\"./ka.js\": 158,\n\t\"./kk\": 159,\n\t\"./kk.js\": 159,\n\t\"./km\": 160,\n\t\"./km.js\": 160,\n\t\"./kn\": 161,\n\t\"./kn.js\": 161,\n\t\"./ko\": 162,\n\t\"./ko.js\": 162,\n\t\"./ky\": 163,\n\t\"./ky.js\": 163,\n\t\"./lb\": 164,\n\t\"./lb.js\": 164,\n\t\"./lo\": 165,\n\t\"./lo.js\": 165,\n\t\"./lt\": 166,\n\t\"./lt.js\": 166,\n\t\"./lv\": 167,\n\t\"./lv.js\": 167,\n\t\"./me\": 168,\n\t\"./me.js\": 168,\n\t\"./mi\": 169,\n\t\"./mi.js\": 169,\n\t\"./mk\": 170,\n\t\"./mk.js\": 170,\n\t\"./ml\": 171,\n\t\"./ml.js\": 171,\n\t\"./mr\": 172,\n\t\"./mr.js\": 172,\n\t\"./ms\": 174,\n\t\"./ms-my\": 173,\n\t\"./ms-my.js\": 173,\n\t\"./ms.js\": 174,\n\t\"./my\": 175,\n\t\"./my.js\": 175,\n\t\"./nb\": 176,\n\t\"./nb.js\": 176,\n\t\"./ne\": 177,\n\t\"./ne.js\": 177,\n\t\"./nl\": 179,\n\t\"./nl-be\": 178,\n\t\"./nl-be.js\": 178,\n\t\"./nl.js\": 179,\n\t\"./nn\": 180,\n\t\"./nn.js\": 180,\n\t\"./pa-in\": 181,\n\t\"./pa-in.js\": 181,\n\t\"./pl\": 182,\n\t\"./pl.js\": 182,\n\t\"./pt\": 184,\n\t\"./pt-br\": 183,\n\t\"./pt-br.js\": 183,\n\t\"./pt.js\": 184,\n\t\"./ro\": 185,\n\t\"./ro.js\": 185,\n\t\"./ru\": 186,\n\t\"./ru.js\": 186,\n\t\"./sd\": 187,\n\t\"./sd.js\": 187,\n\t\"./se\": 188,\n\t\"./se.js\": 188,\n\t\"./si\": 189,\n\t\"./si.js\": 189,\n\t\"./sk\": 190,\n\t\"./sk.js\": 190,\n\t\"./sl\": 191,\n\t\"./sl.js\": 191,\n\t\"./sq\": 192,\n\t\"./sq.js\": 192,\n\t\"./sr\": 194,\n\t\"./sr-cyrl\": 193,\n\t\"./sr-cyrl.js\": 193,\n\t\"./sr.js\": 194,\n\t\"./ss\": 195,\n\t\"./ss.js\": 195,\n\t\"./sv\": 196,\n\t\"./sv.js\": 196,\n\t\"./sw\": 197,\n\t\"./sw.js\": 197,\n\t\"./ta\": 198,\n\t\"./ta.js\": 198,\n\t\"./te\": 199,\n\t\"./te.js\": 199,\n\t\"./tet\": 200,\n\t\"./tet.js\": 200,\n\t\"./th\": 201,\n\t\"./th.js\": 201,\n\t\"./tl-ph\": 202,\n\t\"./tl-ph.js\": 202,\n\t\"./tlh\": 203,\n\t\"./tlh.js\": 203,\n\t\"./tr\": 204,\n\t\"./tr.js\": 204,\n\t\"./tzl\": 205,\n\t\"./tzl.js\": 205,\n\t\"./tzm\": 207,\n\t\"./tzm-latn\": 206,\n\t\"./tzm-latn.js\": 206,\n\t\"./tzm.js\": 207,\n\t\"./uk\": 208,\n\t\"./uk.js\": 208,\n\t\"./ur\": 209,\n\t\"./ur.js\": 209,\n\t\"./uz\": 211,\n\t\"./uz-latn\": 210,\n\t\"./uz-latn.js\": 210,\n\t\"./uz.js\": 211,\n\t\"./vi\": 212,\n\t\"./vi.js\": 212,\n\t\"./x-pseudo\": 213,\n\t\"./x-pseudo.js\": 213,\n\t\"./yo\": 214,\n\t\"./yo.js\": 214,\n\t\"./zh-cn\": 215,\n\t\"./zh-cn.js\": 215,\n\t\"./zh-hk\": 216,\n\t\"./zh-hk.js\": 216,\n\t\"./zh-tw\": 217,\n\t\"./zh-tw.js\": 217\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 331;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale ^\\.\\/.*$\n// module id = 331\n// module chunks = 1","module.exports = \"<div>\\n  <chat-page></chat-page>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 333\n// module chunks = 1","module.exports = \"<div class=\\\"msg-container\\\"\\n     [ngClass]=\\\"{'base-sent': !incoming, 'base-receive': incoming}\\\">\\n\\n  <div class=\\\"avatar\\\"\\n       *ngIf=\\\"!incoming\\\">\\n    <img src=\\\"{{message.author.avatarSrc}}\\\">\\n  </div>\\n\\n  <div class=\\\"messages\\\"\\n    [ngClass]=\\\"{'msg-sent': !incoming, 'msg-receive': incoming}\\\">\\n    <p>{{message.text}}</p>\\n    <p class=\\\"time\\\">{{message.sender}} • {{message.sentAt | fromNow}}</p>\\n  </div>\\n\\n  <div class=\\\"avatar\\\"\\n       *ngIf=\\\"incoming\\\">\\n    <img src=\\\"{{message.author.avatarSrc}}\\\">\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-message/chat-message.component.html\n// module id = 334\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n    </div>\\n    <p class=\\\"navbar-text navbar-right\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\">\\n        Messages <span class=\\\"badge\\\">{{ unreadMessagesCount }}</span>\\n      </button>\\n    </p>\\n  </div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-nav-bar/chat-nav-bar.component.html\n// module id = 335\n// module chunks = 1","module.exports = \"<div>\\n  <chat-nav-bar></chat-nav-bar>\\n  <div class=\\\"container\\\">\\n    <chat-threads></chat-threads>\\n    <chat-window></chat-window>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-page/chat-page.component.html\n// module id = 336\n// module chunks = 1","module.exports = \"<div class=\\\"media conversation\\\">\\n  <div class=\\\"pull-left\\\">\\n    <img class=\\\"media-object avatar\\\"\\n         src=\\\"{{thread.avatarSrc}}\\\">\\n  </div>\\n  <div class=\\\"media-body\\\">\\n    <h5 class=\\\"media-heading contact-name\\\">{{thread.name}}\\n      <span *ngIf=\\\"selected\\\">&bull;</span>\\n    </h5>\\n    <small class=\\\"message-preview\\\">{{thread.lastMessage.text}}</small>\\n  </div>\\n  <a (click)=\\\"clicked($event)\\\" class=\\\"div-link\\\">Select</a>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-thread/chat-thread.component.html\n// module id = 337\n// module chunks = 1","module.exports = \"<!-- conversations -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"conversation-wrap\\\">\\n\\n    <chat-thread\\n         *ngFor=\\\"let thread of threads | async\\\"\\n         [thread]=\\\"thread\\\">\\n    </chat-thread>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-threads/chat-threads.component.html\n// module id = 338\n// module chunks = 1","module.exports = \"<div class=\\\"chat-window-container\\\">\\n  <div class=\\\"chat-window\\\">\\n    <div class=\\\"panel-container\\\">\\n      <div class=\\\"panel panel-default\\\">\\n\\n        <div class=\\\"panel-heading top-bar\\\">\\n          <div class=\\\"panel-title-container\\\">\\n            <h3 class=\\\"panel-title\\\">\\n              <span class=\\\"glyphicon glyphicon-comment\\\"></span>\\n              Chat - {{currentThread.name}}\\n            </h3>\\n          </div>\\n          <div class=\\\"panel-buttons-container\\\">\\n            <!-- you could put minimize or close buttons here -->\\n          </div>\\n        </div>\\n\\n        <div class=\\\"panel-body msg-container-base\\\">\\n          <chat-message\\n          *ngFor=\\\"let message of messages | async\\\"\\n          [message]=\\\"message\\\">\\n        </chat-message>\\n      </div>\\n\\n      <div class=\\\"panel-footer\\\">\\n        <div class=\\\"input-group\\\">\\n          <input type=\\\"text\\\"\\n          class=\\\"chat-input\\\"\\n          placeholder=\\\"Write your message here...\\\"\\n          (keydown.enter)=\\\"onEnter($event)\\\"\\n          [(ngModel)]=\\\"draftMessage.text\\\" />\\n          <span class=\\\"input-group-btn\\\">\\n            <button class=\\\"btn-chat\\\"\\n            (click)=\\\"onEnter($event)\\\"\\n            >Send</button>\\n          </span>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat-window/chat-window.component.html\n// module id = 339\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { User } from './user.model';\n\n\n/**\n * UserService manages our current user\n */\n@Injectable()\nexport class UsersService {\n  // `currentUser` contains the current user\n  currentUser: Subject<User> = new BehaviorSubject<User>(null);\n\n  public setCurrentUser(newUser: User): void {\n    this.currentUser.next(newUser);\n  }\n}\n\nexport const userServiceInjectables: Array<any> = [\n  UsersService\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/users.service.ts","import { User } from '../user/user.model';\nimport { Thread } from '../thread/thread.model';\nimport { uuid } from './../util/uuid';\n\n/**\n * Message represents one message being sent in a Thread\n */\n export class Message {\n   id: string;\n   sentAt: Date;\n   isRead: boolean;\n   author: User;\n   text: string;\n   thread: Thread;\n\n   constructor(obj?: any) {\n     this.id              = obj && obj.id              || uuid();\n     this.isRead          = obj && obj.isRead          || false;\n     this.sentAt          = obj && obj.sentAt          || new Date();\n     this.author          = obj && obj.author          || null;\n     this.text            = obj && obj.text            || null;\n     this.thread          = obj && obj.thread          || null;\n   }\n }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/message/message.model.ts","import { Message } from '../message/message.model';\nimport { uuid } from '../util/uuid';\n\n/**\n * Thread represents a group of Users exchanging Messages\n */\n export class Thread {\n   id: string;\n   lastMessage: Message;\n   name: string;\n   avatarSrc: string;\n\n   constructor(id?: string,\n               name?: string,\n               avatarSrc?: string) {\n     this.id = id || uuid();\n     this.name = name;\n     this.avatarSrc = avatarSrc;\n   }\n }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/thread/thread.model.ts","/* jshint bitwise:false, node:true */\n/* tslint:disable:no-bitwise no-var-keyword typedef */\n\n// taken from TodoMVC\nexport function uuid() {\n    var i, random;\n    var result = '';\n\n    for (i = 0; i < 32; i++) {\n        random = Math.random() * 16 | 0;\n        if (i === 8 || i === 12 || i === 16 || i === 20) {\n            result += '-';\n        }\n        result += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random))\n            .toString(16);\n    }\n\n    return result;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/util/uuid.ts"],"sourceRoot":""}